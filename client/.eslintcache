[{"C:\\Projects\\Jumga\\client\\src\\index.tsx":"1","C:\\Projects\\Jumga\\client\\src\\Routes.tsx":"2","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\index.ts":"3","C:\\Projects\\Jumga\\client\\src\\pages\\auth\\signup\\StoreOwner.tsx":"4","C:\\Projects\\Jumga\\client\\src\\components\\forms\\Field.tsx":"5","C:\\Projects\\Jumga\\client\\src\\pages\\auth\\AuthPage.tsx":"6","C:\\Projects\\Jumga\\client\\src\\pages\\auth\\styles.ts":"7","C:\\Projects\\Jumga\\client\\src\\App.tsx":"8","C:\\Projects\\Jumga\\client\\src\\components\\header\\UserHeaders.tsx":"9","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\Dashboard.tsx":"10","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\styles.ts":"11","C:\\Projects\\Jumga\\client\\src\\components\\header\\styles.ts":"12","C:\\Projects\\Jumga\\client\\src\\pages\\home\\Home.tsx":"13","C:\\Projects\\Jumga\\client\\src\\components\\forms\\index.ts":"14","C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\styles.ts":"15","C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\StoreOwnerSidebar.tsx":"16","C:\\Projects\\Jumga\\client\\src\\pages\\auth\\index.ts":"17","C:\\Projects\\Jumga\\client\\src\\components\\products\\HorizontalProductsView.tsx":"18","C:\\Projects\\Jumga\\client\\src\\components\\products\\styles.ts":"19","C:\\Projects\\Jumga\\client\\src\\components\\products\\index.ts":"20","C:\\Projects\\Jumga\\client\\src\\components\\header\\index.tsx":"21","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\Orders.tsx":"22","C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\index.ts":"23","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\StorePage.tsx":"24","C:\\Projects\\Jumga\\client\\src\\models\\Order.ts":"25","C:\\Projects\\Jumga\\client\\src\\models\\Product.ts":"26","C:\\Projects\\Jumga\\client\\src\\models\\index.ts":"27","C:\\Projects\\Jumga\\client\\src\\components\\forms\\OptionButtons.tsx":"28","C:\\Projects\\Jumga\\client\\src\\components\\table\\FancyTable.tsx":"29","C:\\Projects\\Jumga\\client\\src\\components\\products\\ProductGrid.tsx":"30","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\Products.tsx":"31","C:\\Projects\\Jumga\\client\\src\\components\\products\\ProductCard.tsx":"32","C:\\Projects\\Jumga\\client\\src\\components\\products\\ProductForm.tsx":"33","C:\\Projects\\Jumga\\client\\src\\models\\User.ts":"34","C:\\Projects\\Jumga\\client\\src\\models\\Payout.ts":"35","C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\Sidebar.tsx":"36","C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\RiderSidebar.tsx":"37","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\settings\\Settings.tsx":"38","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\settings\\common.tsx":"39","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\settings\\UserTab.tsx":"40","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\Settings.tsx":"41","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\settings\\AccountTab.tsx":"42","C:\\Projects\\Jumga\\client\\src\\components\\forms\\styles.ts":"43","C:\\Projects\\Jumga\\client\\src\\hooks\\cart\\localcart.tsx":"44","C:\\Projects\\Jumga\\client\\src\\pages\\cart\\Cart.tsx":"45","C:\\Projects\\Jumga\\client\\src\\components\\table\\index.ts":"46","C:\\Projects\\Jumga\\client\\src\\pages\\cart\\styles.ts":"47","C:\\Projects\\Jumga\\client\\src\\pages\\cart\\index.ts":"48","C:\\Projects\\Jumga\\client\\src\\pages\\checkout\\Checkout.tsx":"49","C:\\Projects\\Jumga\\client\\src\\pages\\checkout\\BuyerForm.tsx":"50","C:\\Projects\\Jumga\\client\\src\\pages\\checkout\\Confirmation.tsx":"51","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\AddProduct.tsx":"52","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\settings\\index.ts":"53","C:\\Projects\\Jumga\\client\\src\\reportWebVitals.ts":"54","C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\BottomMenu.tsx":"55","C:\\Projects\\Jumga\\client\\src\\hooks\\cart\\index.ts":"56","C:\\Projects\\Jumga\\client\\src\\state\\Storage.ts":"57","C:\\Projects\\Jumga\\client\\src\\pages\\auth\\login\\Login.tsx":"58","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\index.tsx":"59","C:\\Projects\\Jumga\\client\\src\\components\\orders\\OrdersTable.tsx":"60","C:\\Projects\\Jumga\\client\\src\\components\\orders\\index.ts":"61","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\Orders.tsx":"62","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\Settings.tsx":"63","C:\\Projects\\Jumga\\client\\src\\components\\payouts\\PayoutsTable.tsx":"64","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\index.tsx":"65","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\Dashboard.tsx":"66","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\AddRider.tsx":"67","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\Settings.tsx":"68","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\Riders.tsx":"69","C:\\Projects\\Jumga\\client\\src\\api\\types.ts":"70","C:\\Projects\\Jumga\\client\\src\\components\\forms\\SpinnerButton.tsx":"71","C:\\Projects\\Jumga\\client\\src\\api\\index.ts":"72","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\RiderPage.tsx":"73","C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\AdminNavigation.tsx":"74","C:\\Projects\\Jumga\\client\\src\\components\\payouts\\index.ts":"75","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\Dashboard.tsx":"76","C:\\Projects\\Jumga\\client\\src\\hooks\\users\\user.tsx":"77","C:\\Projects\\Jumga\\client\\src\\api\\hooks.ts":"78","C:\\Projects\\Jumga\\client\\src\\hooks\\users\\login.tsx":"79","C:\\Projects\\Jumga\\client\\src\\hooks\\users\\approve-store.tsx":"80","C:\\Projects\\Jumga\\client\\src\\hooks\\orders\\order.ts":"81","C:\\Projects\\Jumga\\client\\src\\hooks\\orders\\index.ts":"82","C:\\Projects\\Jumga\\client\\src\\hooks\\products\\product.ts":"83","C:\\Projects\\Jumga\\client\\src\\utils.ts":"84","C:\\Projects\\Jumga\\client\\src\\hooks\\products\\index.ts":"85","C:\\Projects\\Jumga\\client\\src\\pages\\checkout\\index.ts":"86","C:\\Projects\\Jumga\\client\\src\\pages\\purchase\\index.ts":"87","C:\\Projects\\Jumga\\client\\src\\pages\\purchases\\index.ts":"88","C:\\Projects\\Jumga\\client\\src\\pages\\purchases\\Purchases.tsx":"89","C:\\Projects\\Jumga\\client\\src\\api\\reducer-utils.ts":"90","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\Order.tsx":"91","C:\\Projects\\Jumga\\client\\src\\pages\\purchase\\Purchase.tsx":"92","C:\\Projects\\Jumga\\client\\src\\pages\\auth\\signup\\Customer.tsx":"93","C:\\Projects\\Jumga\\client\\src\\hooks\\payouts\\index.ts":"94","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\AdminPage.tsx":"95","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\settings\\AppSettingsTab.tsx":"96","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\SetupAcccountAlert.tsx":"97","C:\\Projects\\Jumga\\client\\src\\hooks\\commissions\\commissions.ts":"98","C:\\Projects\\Jumga\\client\\src\\components\\forms\\Selectors.tsx":"99","C:\\Projects\\Jumga\\client\\src\\hooks\\commissions\\index.ts":"100","C:\\Projects\\Jumga\\client\\src\\hooks\\payouts\\payouts.ts":"101","C:\\Projects\\Jumga\\client\\src\\state\\AppState.tsx":"102","C:\\Projects\\Jumga\\client\\src\\components\\payouts\\Withdraw.tsx":"103","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\index.tsx":"104","C:\\Projects\\Jumga\\client\\src\\hooks\\users\\index.ts":"105","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\Refunds.tsx":"106","C:\\Projects\\Jumga\\client\\src\\hooks\\payments\\index.ts":"107","C:\\Projects\\Jumga\\client\\src\\hooks\\refunds\\refunds.ts":"108","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\Wallet.tsx":"109","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\Wallet.tsx":"110","C:\\Projects\\Jumga\\client\\src\\hooks\\index.ts":"111","C:\\Projects\\Jumga\\client\\src\\hooks\\payments\\payments.ts":"112","C:\\Projects\\Jumga\\client\\src\\hooks\\refunds\\index.ts":"113","C:\\Projects\\Jumga\\client\\src\\components\\Utils.tsx":"114","C:\\Projects\\Jumga\\client\\src\\models\\Refund.ts":"115","C:\\Projects\\Jumga\\client\\src\\components\\charts\\LineChart.tsx":"116","C:\\Projects\\Jumga\\client\\src\\components\\charts\\index.ts":"117","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\DashboardAction.tsx":"118","C:\\Projects\\Jumga\\client\\src\\pages\\auth\\Logout.tsx":"119"},{"size":500,"mtime":1606890776324,"results":"120","hashOfConfig":"121"},{"size":3062,"mtime":1611050952277,"results":"122","hashOfConfig":"121"},{"size":78,"mtime":1610048731412,"results":"123","hashOfConfig":"121"},{"size":6108,"mtime":1610976696075,"results":"124","hashOfConfig":"121"},{"size":2738,"mtime":1610927482433,"results":"125","hashOfConfig":"121"},{"size":589,"mtime":1609940761487,"results":"126","hashOfConfig":"121"},{"size":874,"mtime":1609941161943,"results":"127","hashOfConfig":"121"},{"size":548,"mtime":1609921736874,"results":"128","hashOfConfig":"121"},{"size":6401,"mtime":1611050766892,"results":"129","hashOfConfig":"121"},{"size":6218,"mtime":1611053676150,"results":"130","hashOfConfig":"121"},{"size":2763,"mtime":1611041600172,"results":"131","hashOfConfig":"121"},{"size":1752,"mtime":1609964008807,"results":"132","hashOfConfig":"121"},{"size":687,"mtime":1610380426764,"results":"133","hashOfConfig":"121"},{"size":151,"mtime":1610467081799,"results":"134","hashOfConfig":"121"},{"size":1278,"mtime":1609887660178,"results":"135","hashOfConfig":"121"},{"size":1883,"mtime":1610923449888,"results":"136","hashOfConfig":"121"},{"size":133,"mtime":1611050842845,"results":"137","hashOfConfig":"121"},{"size":1254,"mtime":1609790432713,"results":"138","hashOfConfig":"121"},{"size":2051,"mtime":1609888145206,"results":"139","hashOfConfig":"121"},{"size":107,"mtime":1609690587613,"results":"140","hashOfConfig":"121"},{"size":2684,"mtime":1609963933585,"results":"141","hashOfConfig":"121"},{"size":1781,"mtime":1611041325189,"results":"142","hashOfConfig":"121"},{"size":107,"mtime":1610003102710,"results":"143","hashOfConfig":"121"},{"size":651,"mtime":1609920945446,"results":"144","hashOfConfig":"121"},{"size":506,"mtime":1611006257971,"results":"145","hashOfConfig":"121"},{"size":171,"mtime":1610602179136,"results":"146","hashOfConfig":"121"},{"size":133,"mtime":1610914637964,"results":"147","hashOfConfig":"121"},{"size":1133,"mtime":1609683678119,"results":"148","hashOfConfig":"121"},{"size":1899,"mtime":1610916982935,"results":"149","hashOfConfig":"121"},{"size":1092,"mtime":1610380879182,"results":"150","hashOfConfig":"121"},{"size":1792,"mtime":1610602761203,"results":"151","hashOfConfig":"121"},{"size":2682,"mtime":1610971404611,"results":"152","hashOfConfig":"121"},{"size":3752,"mtime":1610927581687,"results":"153","hashOfConfig":"121"},{"size":749,"mtime":1610050384899,"results":"154","hashOfConfig":"121"},{"size":245,"mtime":1610808443730,"results":"155","hashOfConfig":"121"},{"size":2512,"mtime":1610051919985,"results":"156","hashOfConfig":"121"},{"size":1690,"mtime":1610923449888,"results":"157","hashOfConfig":"121"},{"size":1561,"mtime":1609756687763,"results":"158","hashOfConfig":"121"},{"size":915,"mtime":1609756155029,"results":"159","hashOfConfig":"121"},{"size":4433,"mtime":1610474307709,"results":"160","hashOfConfig":"121"},{"size":543,"mtime":1610474519366,"results":"161","hashOfConfig":"121"},{"size":4286,"mtime":1611081777794,"results":"162","hashOfConfig":"121"},{"size":633,"mtime":1609884608954,"results":"163","hashOfConfig":"121"},{"size":2338,"mtime":1610443405896,"results":"164","hashOfConfig":"121"},{"size":4626,"mtime":1610972213558,"results":"165","hashOfConfig":"121"},{"size":31,"mtime":1609682909097,"results":"166","hashOfConfig":"121"},{"size":1235,"mtime":1609880781370,"results":"167","hashOfConfig":"121"},{"size":25,"mtime":1609792641358,"results":"168","hashOfConfig":"121"},{"size":756,"mtime":1610376185333,"results":"169","hashOfConfig":"121"},{"size":4391,"mtime":1610472684295,"results":"170","hashOfConfig":"121"},{"size":6536,"mtime":1611062804889,"results":"171","hashOfConfig":"121"},{"size":1570,"mtime":1610974342819,"results":"172","hashOfConfig":"121"},{"size":150,"mtime":1610436102979,"results":"173","hashOfConfig":"121"},{"size":425,"mtime":1606890776324,"results":"174","hashOfConfig":"121"},{"size":1139,"mtime":1611041999719,"results":"175","hashOfConfig":"121"},{"size":30,"mtime":1609775479547,"results":"176","hashOfConfig":"121"},{"size":217,"mtime":1609516715904,"results":"177","hashOfConfig":"121"},{"size":2870,"mtime":1610976657724,"results":"178","hashOfConfig":"121"},{"size":412,"mtime":1611006383014,"results":"179","hashOfConfig":"121"},{"size":2567,"mtime":1611009489704,"results":"180","hashOfConfig":"121"},{"size":32,"mtime":1610008357463,"results":"181","hashOfConfig":"121"},{"size":1762,"mtime":1611041345266,"results":"182","hashOfConfig":"121"},{"size":543,"mtime":1610474511502,"results":"183","hashOfConfig":"121"},{"size":2182,"mtime":1611005773307,"results":"184","hashOfConfig":"121"},{"size":522,"mtime":1610923744999,"results":"185","hashOfConfig":"121"},{"size":3461,"mtime":1611051226486,"results":"186","hashOfConfig":"121"},{"size":5058,"mtime":1610983336282,"results":"187","hashOfConfig":"121"},{"size":725,"mtime":1610438959181,"results":"188","hashOfConfig":"121"},{"size":3202,"mtime":1610985746348,"results":"189","hashOfConfig":"121"},{"size":1342,"mtime":1610985088224,"results":"190","hashOfConfig":"121"},{"size":840,"mtime":1610973968602,"results":"191","hashOfConfig":"121"},{"size":26,"mtime":1609773631520,"results":"192","hashOfConfig":"121"},{"size":641,"mtime":1610003949462,"results":"193","hashOfConfig":"121"},{"size":1616,"mtime":1610915419877,"results":"194","hashOfConfig":"121"},{"size":62,"mtime":1610807738456,"results":"195","hashOfConfig":"121"},{"size":3058,"mtime":1611050434291,"results":"196","hashOfConfig":"121"},{"size":2047,"mtime":1611060513909,"results":"197","hashOfConfig":"121"},{"size":5351,"mtime":1611005575326,"results":"198","hashOfConfig":"121"},{"size":719,"mtime":1610845152794,"results":"199","hashOfConfig":"121"},{"size":886,"mtime":1610294060209,"results":"200","hashOfConfig":"121"},{"size":4327,"mtime":1611062652482,"results":"201","hashOfConfig":"121"},{"size":26,"mtime":1610282328342,"results":"202","hashOfConfig":"121"},{"size":1290,"mtime":1610602245850,"results":"203","hashOfConfig":"121"},{"size":479,"mtime":1610297084876,"results":"204","hashOfConfig":"121"},{"size":28,"mtime":1610285846994,"results":"205","hashOfConfig":"121"},{"size":29,"mtime":1609792776156,"results":"206","hashOfConfig":"121"},{"size":29,"mtime":1610440581320,"results":"207","hashOfConfig":"121"},{"size":30,"mtime":1610535966584,"results":"208","hashOfConfig":"121"},{"size":6593,"mtime":1611009928651,"results":"209","hashOfConfig":"121"},{"size":750,"mtime":1609773520495,"results":"210","hashOfConfig":"121"},{"size":4198,"mtime":1611008383425,"results":"211","hashOfConfig":"121"},{"size":2626,"mtime":1610989049289,"results":"212","hashOfConfig":"121"},{"size":5721,"mtime":1610976741745,"results":"213","hashOfConfig":"121"},{"size":28,"mtime":1610285779731,"results":"214","hashOfConfig":"121"},{"size":653,"mtime":1610003978466,"results":"215","hashOfConfig":"121"},{"size":4851,"mtime":1611060659218,"results":"216","hashOfConfig":"121"},{"size":1609,"mtime":1610921508894,"results":"217","hashOfConfig":"121"},{"size":747,"mtime":1611060609893,"results":"218","hashOfConfig":"121"},{"size":4479,"mtime":1611082133050,"results":"219","hashOfConfig":"121"},{"size":32,"mtime":1610435802268,"results":"220","hashOfConfig":"121"},{"size":658,"mtime":1610837461791,"results":"221","hashOfConfig":"121"},{"size":1989,"mtime":1611051089025,"results":"222","hashOfConfig":"121"},{"size":4663,"mtime":1610927576802,"results":"223","hashOfConfig":"121"},{"size":404,"mtime":1610914885629,"results":"224","hashOfConfig":"121"},{"size":85,"mtime":1610282824597,"results":"225","hashOfConfig":"121"},{"size":5301,"mtime":1611010922544,"results":"226","hashOfConfig":"121"},{"size":29,"mtime":1610802997148,"results":"227","hashOfConfig":"121"},{"size":891,"mtime":1611011089371,"results":"228","hashOfConfig":"121"},{"size":3042,"mtime":1611041366726,"results":"229","hashOfConfig":"121"},{"size":3042,"mtime":1611041355528,"results":"230","hashOfConfig":"121"},{"size":224,"mtime":1610915012625,"results":"231","hashOfConfig":"121"},{"size":216,"mtime":1610803251935,"results":"232","hashOfConfig":"121"},{"size":28,"mtime":1610914244048,"results":"233","hashOfConfig":"121"},{"size":614,"mtime":1611004941324,"results":"234","hashOfConfig":"121"},{"size":112,"mtime":1610914682524,"results":"235","hashOfConfig":"121"},{"size":1901,"mtime":1611045137495,"results":"236","hashOfConfig":"121"},{"size":30,"mtime":1611042721058,"results":"237","hashOfConfig":"121"},{"size":2425,"mtime":1611050478050,"results":"238","hashOfConfig":"121"},{"size":350,"mtime":1611051008784,"results":"239","hashOfConfig":"121"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},"ejg0h2",{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"242"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"300"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"261"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"247"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"351"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"300"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\Jumga\\client\\src\\index.tsx",[],["503","504"],"C:\\Projects\\Jumga\\client\\src\\Routes.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\index.ts",[],["505","506"],"C:\\Projects\\Jumga\\client\\src\\pages\\auth\\signup\\StoreOwner.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\forms\\Field.tsx",[],["507","508"],"C:\\Projects\\Jumga\\client\\src\\pages\\auth\\AuthPage.tsx",[],["509","510"],"C:\\Projects\\Jumga\\client\\src\\pages\\auth\\styles.ts",[],["511","512"],"C:\\Projects\\Jumga\\client\\src\\App.tsx",[],["513","514"],"C:\\Projects\\Jumga\\client\\src\\components\\header\\UserHeaders.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\Dashboard.tsx",["515"],"import { useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    CircularProgress,\r\n    Hidden,\r\n    Paper,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport { useStyles } from '../styles';\r\nimport { StorePage } from './StorePage';\r\nimport { useCurrentUser } from '../../../state/AppState';\r\nimport { useApproveStore } from '../../../hooks/users';\r\nimport { LineChart } from '../../../components/charts';\r\nimport { SpinnerButton } from '../../../components/forms';\r\nimport { HorizontalProductsView } from '../../../components/products';\r\nimport { Amount } from '../../../components/Utils';\r\nimport { useGetCommissions, useLazyGetProducts } from '../../../hooks';\r\nimport { SetupAccountAlert } from '../SetupAcccountAlert';\r\n\r\n\r\nexport const StoreDashboard = () => {\r\n    const { user } = useCurrentUser();\r\n    const classes = useStyles();\r\n    const isApproved = user.seller?.approved;\r\n\r\n    return <StorePage selected='dashboard'>\r\n        <>\r\n            <Typography\r\n                align='center'\r\n                className={classes.header}\r\n                variant='h4'\r\n            >\r\n                Welcome {user?.firstName}!\r\n            </Typography>\r\n\r\n            <Box marginBottom={4}>\r\n                <SetupAccountAlert />\r\n            </Box>\r\n\r\n            {\r\n                isApproved ? <ApprovedStore /> : <ApproveSection />\r\n            }\r\n\r\n        </>\r\n    </StorePage>;\r\n}\r\n\r\nconst ApproveSection = () => {\r\n    const { approveStore, loading } = useApproveStore();\r\n    const { data, loading: fetching } =\r\n        useGetCommissions({ key: 'storeapproval' });\r\n    const storeApprovalFee = data?.commissions?.[0] || 0;\r\n\r\n    return <Box\r\n        width='100%'\r\n        maxWidth='35rem'\r\n        marginX={'auto'}\r\n    >\r\n        <Paper variant='outlined'>\r\n\r\n            {\r\n                fetching ?\r\n                    <Box\r\n                        display='flex'\r\n                        justifyContent='center'\r\n                        alignItems='center'\r\n                        width='100%'\r\n                        height='100%'\r\n                    >\r\n                        <CircularProgress />\r\n                    </Box>\r\n                    : <Box\r\n                        padding={4}\r\n                    >\r\n                        <Box marginBottom={2}>\r\n                            <Typography align='center' variant='h6'>\r\n                                Your account is not active!\r\n                            </Typography>\r\n                        </Box>\r\n\r\n                        <Typography align='center' variant='body1'>\r\n                            Customers will not be able to see or purchase your products\r\n                            on our platform until you activate your account.\r\n                            You have to pay a one-time fee of{' '}\r\n                            <Amount amount={storeApprovalFee} currency='USD' sign />\r\n                            {' '}to activate your account\r\n                        </Typography>\r\n\r\n                        <Box\r\n                            width='fit-content'\r\n                            marginX={'auto'}\r\n                            marginTop={3}\r\n                        >\r\n                            <SpinnerButton\r\n                                color='primary'\r\n                                variant='contained'\r\n                                onClick={approveStore}\r\n                                loading={loading}\r\n                            >\r\n                                pay{' '}\r\n                                <Amount amount={storeApprovalFee} currency='USD' sign />\r\n                                {' '}now to activate your account\r\n                            </SpinnerButton>\r\n                        </Box>\r\n                    </Box>\r\n            }\r\n\r\n        </Paper>\r\n    </Box>\r\n}\r\n\r\nconst ApprovedStore = () => {\r\n    const classes = useStyles();\r\n    const { user, ready } = useCurrentUser();\r\n    const { getProducts, data } = useLazyGetProducts();\r\n\r\n    const topProducts = data?.products || [];\r\n\r\n    useEffect(() => {\r\n        if (!ready || !user) return;\r\n\r\n        getProducts({ store: user.storeName });\r\n    }, [user, ready]);\r\n\r\n    return <>\r\n\r\n        <Box\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='stretch'\r\n            flexWrap='wrap'\r\n            marginBottom={4}\r\n        >\r\n            <Box marginY={1} marginX={1} minHeight='6rem'>\r\n                <Paper variant='outlined' style={{ height: '100%' }}>\r\n                    <Box padding={2} width='15rem'>\r\n                        <Typography variant='caption'>Your earnings this month</Typography>\r\n\r\n                        <Typography style={{\r\n                            fontWeight: 'bold', fontSize: '1.5rem', marginBlock: '1rem'\r\n                        }}>\r\n                            <Amount amount={47877} currency='USD' sign />\r\n                        </Typography>\r\n\r\n                        <Typography variant='body2' style={{ color: 'green' }}>\r\n                            +12.72%</Typography>\r\n                    </Box>\r\n                </Paper>\r\n            </Box>\r\n\r\n            <Box marginY={1} marginX={1}>\r\n                <Paper variant='outlined' style={{ height: '100%' }}>\r\n                    <Box padding={2} width='15rem'>\r\n                        <Typography variant='caption'>Your sales this month</Typography>\r\n\r\n                        <Typography style={{\r\n                            fontWeight: 'bold', fontSize: '1.5rem', marginBlock: '1rem'\r\n                        }}>\r\n                            325\r\n                        </Typography>\r\n\r\n                        <Typography variant='body2' style={{ color: 'green' }}>\r\n                            +8.23%</Typography>\r\n                    </Box>\r\n                </Paper>\r\n            </Box>\r\n        </Box>\r\n\r\n        <Hidden smDown>\r\n            <LineChart />\r\n        </Hidden>\r\n\r\n        <div style={{ marginTop: '5rem' }}>\r\n\r\n            <Typography className={classes.header} align='center' variant='h5'>\r\n                Top Selling Products</Typography>\r\n\r\n            <HorizontalProductsView products={topProducts} />\r\n\r\n        </div>\r\n    </>\r\n}\r\n","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\styles.ts",[],"C:\\Projects\\Jumga\\client\\src\\components\\header\\styles.ts",[],["516","517"],"C:\\Projects\\Jumga\\client\\src\\pages\\home\\Home.tsx",["518"],"import Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport { ProductGrid } from \"../../components/products\";\r\nimport { useGetProducts } from '../../hooks/products';\r\n\r\ntype Keys = \"name\" | \"image\" | \"price\" | \"url\";\r\n\r\nexport const Home = () => {\r\n    const { data, loading } = useGetProducts({ accessible: true });\r\n    const products = data?.products || [];\r\n    return <Container>\r\n\r\n        <Box marginY={8}>\r\n            <ProductGrid\r\n                products={products}\r\n                placeholder={loading}\r\n                placeholderLength={10}\r\n                allowAddToCart\r\n            />\r\n        </Box>\r\n\r\n    </Container>\r\n}\r\n","C:\\Projects\\Jumga\\client\\src\\components\\forms\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\styles.ts",[],["519","520"],"C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\StoreOwnerSidebar.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\auth\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\components\\products\\HorizontalProductsView.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\products\\styles.ts",[],["521","522"],"C:\\Projects\\Jumga\\client\\src\\components\\products\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\components\\header\\index.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\Orders.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\index.ts",[],["523","524"],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\StorePage.tsx",[],["525","526"],"C:\\Projects\\Jumga\\client\\src\\models\\Order.ts",[],"C:\\Projects\\Jumga\\client\\src\\models\\Product.ts",[],"C:\\Projects\\Jumga\\client\\src\\models\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\components\\forms\\OptionButtons.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\table\\FancyTable.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\products\\ProductGrid.tsx",[],["527","528"],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\Products.tsx",["529","530"],"import { useEffect } from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ProductGrid } from \"../../../components/products\";\r\nimport { useLazyGetProducts } from \"../../../hooks/products\";\r\nimport { useCurrentUser } from \"../../../state/AppState\";\r\nimport { useStyles } from \"../styles\"\r\nimport { StorePage } from \"./StorePage\"\r\n\r\n\r\ntype Keys = \"name\" | \"image\" | \"price\" | \"url\";\r\n\r\nexport const StoreProducts = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const { user, ready } = useCurrentUser();\r\n    const { getProducts, data, loading } = useLazyGetProducts();\r\n\r\n    useEffect(() => {\r\n        if (!ready || !user) return;\r\n    \r\n        getProducts({ store: user.storeName });\r\n    }, [user, ready]);\r\n\r\n\r\n    let products = data?.products || [];\r\n    products = products.map((p: any) => ({ ...p, image: p.images[0] }));\r\n\r\n    return <StorePage selected='products'>\r\n        <>\r\n\r\n            <div className={classes.header} style={{\r\n                display: 'flex', alignItems: 'flex-end',\r\n                flexWrap: 'wrap'\r\n            }}>\r\n\r\n                <Typography variant='h4'>\r\n                    Products\r\n                </Typography>\r\n\r\n                <Button\r\n                    color='primary'\r\n                    variant='text'\r\n                    style={{ marginLeft: '1rem' }}\r\n                    onClick={() => history.push('/dashboard/products/add')}\r\n                >\r\n                    new\r\n                </Button>\r\n\r\n            </div>\r\n\r\n            <ProductGrid\r\n                products={products}\r\n                placeholder={loading}\r\n                placeholderLength={10}    \r\n            />\r\n\r\n        </>\r\n    </StorePage>\r\n}\r\n","C:\\Projects\\Jumga\\client\\src\\components\\products\\ProductCard.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\products\\ProductForm.tsx",[],"C:\\Projects\\Jumga\\client\\src\\models\\User.ts",[],["531","532"],"C:\\Projects\\Jumga\\client\\src\\models\\Payout.ts",[],"C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\Sidebar.tsx",[],["533","534"],"C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\RiderSidebar.tsx",["535"],"import React from 'react';\r\nimport DashboardIcon from '@material-ui/icons/DashboardOutlined';\r\nimport OrdersIcon from '@material-ui/icons/ShoppingBasketOutlined';\r\nimport ProductsIcon from '@material-ui/icons/StorefrontOutlined';\r\nimport PayoutsIcon from '@material-ui/icons/AccountBalanceWalletOutlined';\r\nimport SettingsIcon from '@material-ui/icons/SettingsOutlined';\r\nimport { Nav, Navigation } from './Sidebar';\r\nimport { useSideBarStyles } from './styles';\r\n\r\n\r\nexport type RiderSideBarItems = 'dashboard' | 'orders' | 'wallet' | 'settings';\r\n\r\ninterface SideBarProps {\r\n    classes?: {\r\n        sideBar?: string,\r\n        bottomBar?: string\r\n    };\r\n\r\n    /**\r\n     * The current selected sidebar item\r\n     */\r\n    selected: RiderSideBarItems;\r\n}\r\n\r\nexport const RiderSidebar: React.FC<SideBarProps> = ({ classes, selected }) => {\r\n    const sidebarClasses = useSideBarStyles();\r\n\r\n    const RiderNavs: Nav[] = [\r\n        {\r\n            name: 'dashboard',\r\n            icon: <DashboardIcon className={sidebarClasses.icon} />,\r\n            route: '/dashboard'\r\n        },\r\n        {\r\n            name: 'orders',\r\n            icon: <OrdersIcon className={sidebarClasses.icon} />,\r\n            route: '/dashboard/orders'\r\n        },\r\n        {\r\n            name: 'wallet',\r\n            icon: <PayoutsIcon className={sidebarClasses.icon} />,\r\n            route: '/dashboard/wallet'\r\n        },\r\n        {\r\n            name: 'settings',\r\n            icon: <SettingsIcon className={sidebarClasses.icon} />,\r\n            route: '/dashboard/settings'\r\n        }\r\n    ];\r\n\r\n    return <Navigation\r\n        classes={classes}\r\n        navs={RiderNavs}\r\n        selected={selected}\r\n    />\r\n}\r\n","C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\settings\\Settings.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\settings\\common.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\settings\\UserTab.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\Settings.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\settings\\AccountTab.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\forms\\styles.ts",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\cart\\localcart.tsx",["536"],"import { useSnackbar } from \"notistack\";\r\nimport {\r\n    createContext,\r\n    useContext,\r\n    useEffect,\r\n    useState\r\n} from \"react\"\r\nimport { Product } from \"../../models\";\r\n\r\n\r\ntype Keys = \"name\" | \"price\" | \"image\" | \"url\";\r\ntype ProductInfo = Pick<Product, Keys>;\r\n\r\nexport type CartItem = ProductInfo & { quantity: number };\r\n\r\ntype Cart<T = any> = {\r\n    [P in keyof T]: CartItem\r\n}\r\n\r\nconst CartContext = createContext<{\r\n    cart: Cart,\r\n    increment?: (product: ProductInfo, quantity: number) => void,\r\n    decrement?: (product: ProductInfo, quantity: number) => void,\r\n    clear?: () => void\r\n}>({\r\n    cart: {}\r\n});\r\n\r\nexport const CartProvider: React.FC = ({ children }) => {\r\n    const [cart, setCart] = useState<Cart>({});\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        // TODO save cart by logged in user\r\n        const storedCart = localStorage.getItem('CART');\r\n        if (!storedCart) return;\r\n        try {\r\n            setCart(JSON.parse(storedCart));   \r\n        } catch (error) {\r\n            enqueueSnackbar('Failed to load Cart!', { variant: 'error' });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('CART', JSON.stringify(cart));\r\n    }, [cart]);\r\n\r\n    const increment = (product: ProductInfo, quantity: number) => setCart(\r\n        (c) => ({\r\n            ...c,\r\n            [product.url]: {\r\n                ...product,\r\n                quantity: (c[product.url]?.quantity || 0) + quantity\r\n            }\r\n        })\r\n    );\r\n    const decrement = (product: ProductInfo, quantity: number) => setCart(\r\n        (c) => ({\r\n            ...c,\r\n            [product.url]: {\r\n                ...product,\r\n                quantity:  Math.max((c[product.url]?.quantity || 0) - quantity, 0)\r\n            }\r\n        })\r\n    );\r\n\r\n    const cartOfProductsAboveZero = Object.keys(cart)\r\n        .reduce((prev: any, cur: string) => {\r\n            if (cart[cur].quantity === 0) return prev;\r\n            return { ...prev, [cur]: cart[cur] };\r\n        }, {});\r\n\r\n    return <CartContext.Provider value={{\r\n        cart: cartOfProductsAboveZero,\r\n        increment,\r\n        decrement,\r\n        clear: () => setCart({})\r\n    }}>\r\n        {children}\r\n    </CartContext.Provider>\r\n}\r\n\r\nexport const useCart = () => {\r\n    return useContext(CartContext);\r\n}\r\n","C:\\Projects\\Jumga\\client\\src\\pages\\cart\\Cart.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\table\\index.ts",[],["537","538"],"C:\\Projects\\Jumga\\client\\src\\pages\\cart\\styles.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\cart\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\checkout\\Checkout.tsx",[],["539","540"],"C:\\Projects\\Jumga\\client\\src\\pages\\checkout\\BuyerForm.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\checkout\\Confirmation.tsx",["541"],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\AddProduct.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\settings\\index.ts",[],["542","543"],"C:\\Projects\\Jumga\\client\\src\\reportWebVitals.ts",[],"C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\BottomMenu.tsx",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\cart\\index.ts",[],["544","545"],"C:\\Projects\\Jumga\\client\\src\\state\\Storage.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\auth\\login\\Login.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\index.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\orders\\OrdersTable.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\orders\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\Orders.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\Settings.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\payouts\\PayoutsTable.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\index.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\Dashboard.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\AddRider.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\Settings.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\Riders.tsx",[],"C:\\Projects\\Jumga\\client\\src\\api\\types.ts",[],"C:\\Projects\\Jumga\\client\\src\\components\\forms\\SpinnerButton.tsx",[],"C:\\Projects\\Jumga\\client\\src\\api\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\RiderPage.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\sidebar\\AdminNavigation.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\payouts\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\Dashboard.tsx",["546"],"C:\\Projects\\Jumga\\client\\src\\hooks\\users\\user.tsx",[],"C:\\Projects\\Jumga\\client\\src\\api\\hooks.ts",["547","548"],"import axios from 'axios';\r\nimport { Reducer, useEffect, useReducer, useState } from 'react';\r\nimport { useCurrentUser } from '../state/AppState';\r\nimport { Action, ActionTypes, reducer, RequestState } from './reducer-utils';\r\nimport {\r\n    Method,\r\n    RequestOptions,\r\n    GetReponse,\r\n    MutateReponse,\r\n    FormError\r\n} from './types';\r\n\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\naxios.interceptors.response.use(\r\n    (response) => response, (error) => {\r\n        if (!error.response) return Promise.reject(error);\r\n        \r\n        const message = error.response.data.message || 'An error occurred';\r\n\r\n        if (error.response.status === 400)\r\n            return Promise.reject(\r\n                new FormError(message, error.response.data.errors));\r\n\r\n        return Promise.reject(error);\r\n    });\r\n\r\n/**\r\n * Sends a GET request with the specified route and options\r\n * as soon as the Component is mounted\r\n * @param route the relative GET request route.\r\n * The route must have a leading '/'\r\n * @param options the request options\r\n */\r\nexport const useGet = (route: string, options?: RequestOptions): GetReponse => {\r\n    const [force, setForce] = useState(true);\r\n    const [state, dispatch] = useReducer<Reducer<RequestState, Action>>(\r\n        reducer, { loading: true, data: null, error: null });\r\n    const { user } = useCurrentUser();\r\n\r\n    const doGet = () => {\r\n        if (state.loading && !force) return;\r\n        if (force)\r\n            setForce(false);\r\n        else\r\n            dispatch({ type: ActionTypes.REQUEST_START });\r\n\r\n        (async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}${route}`, {\r\n                    ...options,\r\n                    headers: {\r\n                        Authorization: `Bearer ${user?.token || ''}`\r\n                    }\r\n                });\r\n\r\n                dispatch({\r\n                    type: ActionTypes.REQUEST_FINISH,\r\n                    payload: {\r\n                        data: response.data.data\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                dispatch({\r\n                    type: ActionTypes.REQUEST_FINISH,\r\n                    payload: {\r\n                        data: null, error\r\n                    }\r\n                });\r\n            }\r\n        })();\r\n    }\r\n\r\n    useEffect(doGet, [force, route, ...Object.values((options?.params || {}))]);\r\n\r\n    return {\r\n        ...state,\r\n        execute: doGet\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Sends a GET request with the specified route and options\r\n * as soon as the `get` function is called\r\n * @param route the relative GET request route.\r\n * The route must have a leading '/'\r\n * @param options the request options\r\n */\r\nexport const useLazyGet = (route: string) => {\r\n    const [state, dispatch] = useReducer<Reducer<RequestState, Action>>(\r\n        reducer, { loading: false, data: null, error: null });\r\n    const { user } = useCurrentUser();\r\n\r\n    const get = async (options?: RequestOptions) => {\r\n        if (state.loading) return;\r\n        dispatch({ type: ActionTypes.REQUEST_START });\r\n        try {\r\n            const response = await axios.get(`${baseUrl}${route}`, {\r\n                ...options,\r\n                headers: {\r\n                    Authorization: `Bearer ${user?.token || ''}`\r\n                }\r\n            });\r\n\r\n            dispatch({\r\n                type: ActionTypes.REQUEST_FINISH,\r\n                payload: {\r\n                    data: response.data.data\r\n                }\r\n            });\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ActionTypes.REQUEST_FINISH,\r\n                payload: {\r\n                    data: null, error\r\n                }\r\n            });\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    return { ...state, get }\r\n}\r\n\r\n\r\n/**\r\n * Sends a request with the specified route and method\r\n * as soon as the mutate function is called\r\n * @param route the relative request route.\r\n * The route must have a leading '/'\r\n * @param options the request options\r\n */\r\nexport const useMutate = (route: string, method: Method): MutateReponse => {\r\n    const [state, dispatch] = useReducer<Reducer<RequestState, Action>>(\r\n        reducer, { loading: false, data: null, error: null });\r\n    const { user } = useCurrentUser();\r\n\r\n    const mutate = async (body: any, options?: RequestOptions) => {\r\n        try {\r\n            if (state.loading) return;\r\n\r\n            dispatch({ type: ActionTypes.REQUEST_START });\r\n            const response = await axios.request({\r\n                method, url: `${baseUrl}${route}`,\r\n                data: body,\r\n                ...options,\r\n                headers: {\r\n                    Authorization: `Bearer ${user?.token || ''}`\r\n                }\r\n            });\r\n\r\n            dispatch({\r\n                type: ActionTypes.REQUEST_FINISH,\r\n                payload: {\r\n                    data: response.data.data\r\n                }\r\n            });\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ActionTypes.REQUEST_FINISH,\r\n                payload: {\r\n                    data: null, error\r\n                }\r\n            });\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    return { ...state, mutate }\r\n}\r\n","C:\\Projects\\Jumga\\client\\src\\hooks\\users\\login.tsx",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\users\\approve-store.tsx",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\orders\\order.ts",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\orders\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\products\\product.ts",[],"C:\\Projects\\Jumga\\client\\src\\utils.ts",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\products\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\checkout\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\purchase\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\purchases\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\purchases\\Purchases.tsx",[],"C:\\Projects\\Jumga\\client\\src\\api\\reducer-utils.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\Order.tsx",["549"],"import Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { SpinnerButton } from \"../../../components/forms\";\r\nimport { useGetOrders, useOrderDrop } from \"../../../hooks/orders\";\r\nimport { useCurrentUser } from \"../../../state/AppState\";\r\nimport { useStyles } from \"../styles\";\r\nimport { RiderPage } from \"./RiderPage\";\r\nimport { OrderStatus } from \"../../../models\";\r\n\r\nexport const Order = () => {\r\n    const classes = useStyles();\r\n    const { code } = useParams<{ code: string }>();\r\n    const { user } = useCurrentUser();\r\n    const { data, loading, error } = useGetOrders(\"\", { code });\r\n\r\n    const order = data?.orders?.[0];\r\n    const customer = order?.customer;\r\n    const deliveryAddress = order?.deliveryAddress;\r\n\r\n    const color = 'black';\r\n\r\n    return <RiderPage selected='orders'>\r\n\r\n        <Box\r\n            className={classes.header}\r\n            display='flex'\r\n            justifyContent='space-between'\r\n            alignItems='center'\r\n            flexWrap='wrap'\r\n        >\r\n            <Typography variant='h4'>\r\n                {code}\r\n            </Typography>\r\n            <Typography variant='h6' component='span'\r\n                style={{ color, textTransform: 'uppercase' }}>\r\n                {order?.status}\r\n            </Typography>\r\n        </Box>\r\n\r\n        {\r\n            order?.status === OrderStatus.paid &&\r\n            <Box\r\n                display='flex'\r\n                marginBottom={3}\r\n            >\r\n                <MarkDeliveredButton code={code} userId={user._id} />\r\n            </Box>\r\n        }\r\n\r\n        <Box>\r\n\r\n            <Box marginY={2} width='100%'>\r\n                <Paper variant='outlined'>\r\n\r\n                    <Box padding={2}>\r\n                        <Typography variant='h5'>Customer</Typography>\r\n\r\n                        <Detail loading={loading}\r\n                            label='Full Name' value={customer?.name} />\r\n\r\n                        <Detail loading={loading}\r\n                            label='Email' value={customer?.email} />\r\n                    </Box>\r\n\r\n                </Paper>\r\n            </Box>\r\n\r\n            <Box marginY={2} width='100%'>\r\n                <Paper variant='outlined'>\r\n\r\n                    <Box padding={2}>\r\n                        <Typography variant='h5'>\r\n                            Delivery Address\r\n                        </Typography>\r\n\r\n                        <Detail loading={loading}\r\n                            label='Street' value={deliveryAddress?.street} />\r\n\r\n                        <Detail loading={loading}\r\n                            label='City' value={deliveryAddress?.city} />\r\n\r\n                        <Detail loading={loading}\r\n                            label='State' value={deliveryAddress?.state} />\r\n\r\n                        <Detail loading={loading}\r\n                            label='Country' value={deliveryAddress?.country} />\r\n                    </Box>\r\n\r\n                </Paper>\r\n            </Box>\r\n\r\n        </Box>\r\n\r\n\r\n\r\n    </RiderPage>\r\n}\r\n\r\n\r\ninterface MarkDeliveredButtonProps {\r\n    code: string;\r\n    userId: string;\r\n}\r\n\r\nconst MarkDeliveredButton: React.FC<MarkDeliveredButtonProps> =\r\n    ({ code, userId }) => {\r\n        const { dropOrder, loading } = useOrderDrop();\r\n\r\n        return <SpinnerButton\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => dropOrder(code, userId)}\r\n            loading={loading}\r\n        >\r\n            Mark Delivered\r\n    </SpinnerButton>\r\n    }\r\n\r\n\r\ninterface DetailProps {\r\n    loading: boolean\r\n    label: string\r\n    value: string\r\n}\r\n\r\nconst Detail: React.FC<DetailProps> = ({ loading, label, value }) => {\r\n\r\n    return <Box\r\n        marginY={2}\r\n    >\r\n        <Box marginBottom={1}>\r\n            {\r\n                loading ? <Skeleton />\r\n                    : <Typography variant='caption'>{label}</Typography>\r\n            }\r\n        </Box>\r\n\r\n        {\r\n            loading ? <Skeleton /> : <Typography>{value}</Typography>\r\n        }\r\n    </Box>\r\n}\r\n","C:\\Projects\\Jumga\\client\\src\\pages\\purchase\\Purchase.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\auth\\signup\\Customer.tsx",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\payouts\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\AdminPage.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\settings\\AppSettingsTab.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\SetupAcccountAlert.tsx",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\commissions\\commissions.ts",[],"C:\\Projects\\Jumga\\client\\src\\components\\forms\\Selectors.tsx",["550","551","552"],"C:\\Projects\\Jumga\\client\\src\\hooks\\commissions\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\payouts\\payouts.ts",[],"C:\\Projects\\Jumga\\client\\src\\state\\AppState.tsx",["553"],"C:\\Projects\\Jumga\\client\\src\\components\\payouts\\Withdraw.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\index.tsx",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\users\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\admin\\Refunds.tsx",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\payments\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\refunds\\refunds.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\rider\\Wallet.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\store\\Wallet.tsx",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\payments\\payments.ts",[],"C:\\Projects\\Jumga\\client\\src\\hooks\\refunds\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\components\\Utils.tsx",[],"C:\\Projects\\Jumga\\client\\src\\models\\Refund.ts",[],"C:\\Projects\\Jumga\\client\\src\\components\\charts\\LineChart.tsx",[],"C:\\Projects\\Jumga\\client\\src\\components\\charts\\index.ts",[],"C:\\Projects\\Jumga\\client\\src\\pages\\dashboard\\DashboardAction.tsx",[],"C:\\Projects\\Jumga\\client\\src\\pages\\auth\\Logout.tsx",[],{"ruleId":"554","replacedBy":"555"},{"ruleId":"556","replacedBy":"557"},{"ruleId":"554","replacedBy":"558"},{"ruleId":"556","replacedBy":"559"},{"ruleId":"554","replacedBy":"560"},{"ruleId":"556","replacedBy":"561"},{"ruleId":"554","replacedBy":"562"},{"ruleId":"556","replacedBy":"563"},{"ruleId":"554","replacedBy":"564"},{"ruleId":"556","replacedBy":"565"},{"ruleId":"554","replacedBy":"566"},{"ruleId":"556","replacedBy":"567"},{"ruleId":"568","severity":1,"message":"569","line":123,"column":8,"nodeType":"570","endLine":123,"endColumn":21,"suggestions":"571"},{"ruleId":"554","replacedBy":"572"},{"ruleId":"556","replacedBy":"573"},{"ruleId":"574","severity":1,"message":"575","line":6,"column":6,"nodeType":"576","messageId":"577","endLine":6,"endColumn":10},{"ruleId":"554","replacedBy":"578"},{"ruleId":"556","replacedBy":"579"},{"ruleId":"554","replacedBy":"580"},{"ruleId":"556","replacedBy":"581"},{"ruleId":"554","replacedBy":"582"},{"ruleId":"556","replacedBy":"583"},{"ruleId":"554","replacedBy":"584"},{"ruleId":"556","replacedBy":"585"},{"ruleId":"554","replacedBy":"586"},{"ruleId":"556","replacedBy":"587"},{"ruleId":"574","severity":1,"message":"575","line":11,"column":6,"nodeType":"576","messageId":"577","endLine":11,"endColumn":10},{"ruleId":"568","severity":1,"message":"569","line":23,"column":8,"nodeType":"570","endLine":23,"endColumn":21,"suggestions":"588"},{"ruleId":"554","replacedBy":"589"},{"ruleId":"556","replacedBy":"590"},{"ruleId":"554","replacedBy":"591"},{"ruleId":"556","replacedBy":"592"},{"ruleId":"574","severity":1,"message":"593","line":4,"column":8,"nodeType":"576","messageId":"577","endLine":4,"endColumn":20},{"ruleId":"568","severity":1,"message":"594","line":42,"column":8,"nodeType":"570","endLine":42,"endColumn":10,"suggestions":"595"},{"ruleId":"554","replacedBy":"596"},{"ruleId":"556","replacedBy":"597"},{"ruleId":"554","replacedBy":"598"},{"ruleId":"556","replacedBy":"599"},{"ruleId":"568","severity":1,"message":"600","line":45,"column":8,"nodeType":"570","endLine":45,"endColumn":10,"suggestions":"601"},{"ruleId":"554","replacedBy":"602"},{"ruleId":"556","replacedBy":"603"},{"ruleId":"554","replacedBy":"604"},{"ruleId":"556","replacedBy":"605"},{"ruleId":"574","severity":1,"message":"606","line":11,"column":13,"nodeType":"576","messageId":"577","endLine":11,"endColumn":17},{"ruleId":"568","severity":1,"message":"607","line":74,"column":22,"nodeType":"570","endLine":74,"endColumn":79,"suggestions":"608"},{"ruleId":"568","severity":1,"message":"609","line":74,"column":37,"nodeType":"610","endLine":74,"endColumn":78},{"ruleId":"574","severity":1,"message":"611","line":17,"column":28,"nodeType":"576","messageId":"577","endLine":17,"endColumn":33},{"ruleId":"574","severity":1,"message":"611","line":12,"column":28,"nodeType":"576","messageId":"577","endLine":12,"endColumn":33},{"ruleId":"568","severity":1,"message":"612","line":78,"column":12,"nodeType":"570","endLine":78,"endColumn":22,"suggestions":"613"},{"ruleId":"568","severity":1,"message":"614","line":110,"column":12,"nodeType":"570","endLine":110,"endColumn":22,"suggestions":"615"},{"ruleId":"568","severity":1,"message":"616","line":74,"column":8,"nodeType":"570","endLine":74,"endColumn":30,"suggestions":"617"},"no-native-reassign",["618"],"no-negated-in-lhs",["619"],["618"],["619"],["618"],["619"],["618"],["619"],["618"],["619"],["618"],["619"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.","ArrayExpression",["620"],["618"],["619"],"@typescript-eslint/no-unused-vars","'Keys' is defined but never used.","Identifier","unusedVar",["618"],["619"],["618"],["619"],["618"],["619"],["618"],["619"],["618"],["619"],["621"],["618"],["619"],["618"],["619"],"'ProductsIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'enqueueSnackbar'. Either include it or remove the dependency array.",["622"],["618"],["619"],["618"],["619"],"React Hook useEffect has missing dependencies: 'getDeliveryFee' and 'sales'. Either include them or remove the dependency array.",["623"],["618"],["619"],["618"],["619"],"'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'options', 'state.loading', and 'user?.token'. Either include them or remove the dependency array.",["624"],"React Hook useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'banks', 'name', and 'setFieldValue'. Either include them or remove the dependency array.",["625"],"React Hook useEffect has missing dependencies: 'branches', 'name', and 'setFieldValue'. Either include them or remove the dependency array.",["626"],"React Hook useEffect has missing dependencies: 'get' and 'user'. Either include them or remove the dependency array.",["627"],"no-global-assign","no-unsafe-negation",{"desc":"628","fix":"629"},{"desc":"628","fix":"630"},{"desc":"631","fix":"632"},{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},"Update the dependencies array to be: [user, ready, getProducts]",{"range":"643","text":"644"},{"range":"645","text":"644"},"Update the dependencies array to be: [enqueueSnackbar]",{"range":"646","text":"647"},"Update the dependencies array to be: [getDeliveryFee, sales]",{"range":"648","text":"649"},"Update the dependencies array to be: [force, options, route, state.loading, user?.token]",{"range":"650","text":"651"},"Update the dependencies array to be: [banks, name, selected, setFieldValue]",{"range":"652","text":"653"},"Update the dependencies array to be: [branches, name, selected, setFieldValue]",{"range":"654","text":"655"},"Update the dependencies array to be: [user?.token, setUser, user, get]",{"range":"656","text":"657"},[4167,4180],"[user, ready, getProducts]",[804,817],[1135,1137],"[enqueueSnackbar]",[1586,1588],"[getDeliveryFee, sales]",[2365,2422],"[force, options, route, state.loading, user?.token]",[2673,2683],"[banks, name, selected, setFieldValue]",[3987,3997],"[branches, name, selected, setFieldValue]",[1939,1961],"[user?.token, setUser, user, get]"]