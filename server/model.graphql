scalar Date

enum Role {
    user
    seller
    rider
    admin
}

"""
@model
@usernamepasswordauth
"""
type User {
    firstName: String!
    lastName: String!
    """
    @unique
    @username
    """
    email: String!
    """
    @password
    """
    password: String!
    address: Address!
    """
    @default('user')
    """
    role: Role!
    account: Account
    """
    Earnings since last payout
    @default(0.00)
    """
    earnings: Float
    createdAt: Date!
}

type Account {
    name: String!
    number: String!
    bank: String!
    bankCode: String!
}

type Address {
    country: String!
    state: String!
    city: String!
    street: String!
}

"""
@model
"""
type Seller {
    """
    @OneToOne('User', '_id')
    """
    user: User!
    """
    @default(false)
    """
    approved: Boolean!
    """
    @unique
    """
    storeName: String!
}

"""
@model
"""
type Rider {
    """
    @OneToOne('User', '_id')
    """
    user: User!
}

"""
@model
"""
type Product {
    """
    @ManyToOne('Seller', 'storeName')
    """
    store: String!
    name: String!
    price: Float!
    """
    @default(true)
    """
    inStock: Boolean!
    """
    @unique
    """
    url: String!
    """
    @default([])
    """
    images: [String]
    accessible: Boolean! 
    createdAt: Date!
}

"""
@model
"""
type Order {
    """
    @unique
    @immutable
    """
    code: String!
    customer: CustomerDetails!
    deliveryAddress: Address!
    sales: [Sale]!
    total: Float!
    deliveryFee: Float!
    purchaseCommission: Float!
    deliveryCommission: Float!
    """
    @default('pending')
    """
    status: OrderStatus!
    """
    @default([])
    """
    history: [OrderEvent]!
    path: [String]!
    createdAt: Date!
    """
    @ManyToOne('User', '_id')
    """
    createdBy: User!
}

type CustomerDetails {
    name: String!
    email: String!
}

type OrderEvent {
    status: OrderStatus!
    at: Date!
}

type Sale {
    """
    @ManyToOne('Product', 'url')
    """
    product: String!
    quantity: Int!
    amount: Float!
    commission: Float!
    """
    @ManyToOne('Seller', 'storeName')
    """
    store: String!
}

enum OrderStatus {
    pending
    paid
    completed
    cancelled
    returned
}

"""
@model
"""
type Payout {
    """
    @OneToOne('User', '_id')
    """
    user: User!
    earningPeriod: EarningPeriod!
    paidOn: Date!
}

type EarningPeriod {
    from: Date!
    to: Date!
}

"""
@model
"""
type Commission {
    key: Fees
    value: Float!
}

enum Fees {
    storeapproval
    purchase
    delivery
}

"""
@model
"""
type Transaction {
    type: TransactionType!
    amount: Float!
    subject: String!
    description: String!
    date: Date!
}

enum TransactionType {
    credit
    debit
}

"""
@model
"""
type File {
    """
    @unique
    """
    path: String!
}

"""
@model
"""
type Country {
    """
    @unique
    """
    name: String!
    shortCode: String!
    states: [String]!
}
